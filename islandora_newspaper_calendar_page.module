<?php

/**
 * Implements hook_menu().
 */
function islandora_newspaper_calendar_page_menu() {
  $items['admin/islandora/tools/newspaper-calendar'] = array(
    'title' => 'Newspaper Calendar Page',
    'description' => 'Configure the Islandora Newspaper Calendar page settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_newspaper_page_admin'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/admin.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_newspaper_calendar_page_view_object($vars) {
  global $_REQUEST;
  $object = $vars['object'];
  // Default to earliest newspaper issue year found.
  if (!isset($_REQUEST['year'])) {
    $_REQUEST['year_options'] = islandora_newspaper_calendar_page_get_years($object);
  }
  $output = drupal_get_form('islandora_newspaper_calendar_page_form', $object, $_REQUEST['year']);
  return drupal_render($output);
}

/**
 * Implements hook_theme_registry_alter().
 */
function islandora_newspaper_calendar_page_theme_registry_alter(&$theme_registry) {
  if (isset($theme_registry['islandora_newspaper'])) {
    $theme_registry['islandora_newspaper']['function'] = 'islandora_newspaper_calendar_page_view_object';
    unset($theme_registry['islandora_newspaper']['preprocess functions']);
    unset($theme_registry['islandora_newspaper']['process functions']);
    unset($theme_registry['islandora_newspaper']['file']);
    unset($theme_registry['islandora_newspaper']['includes']);
    unset($theme_registry['islandora_newspaper']['template']);
  }
}


/**
 * Determines whether or not to show this modules tab.
 *
 * @param FedoraObject $fedora_object
 *   The islandora object.
 *
 * @return bool
 *   Returns TRUE if the page should be viewed, FALSE otherwise.
 */
function islandora_newspaper_calendar_page_access(FedoraObject $fedora_object) {
  if (!isset($fedora_object)) {
    return FALSE;
  }

  $models = $fedora_object->models;

  // Show tab if MODS datastream exists and has newspaperCModel relationship.
  if (isset($fedora_object['MODS']) and in_array("islandora:newspaperCModel", $models, TRUE)) {
    return TRUE;
  }

  return FALSE;
}

/**
 * The newspaper calendar page view.
 *
 * @param FedoraObject $object
 *   The islandora object.
 * @param string $issue_year
 *   The year requested.
 *
 * @return string
 *   The rendered output.
 */
function islandora_newspaper_calendar_page_view(FedoraObject $object, $issue_year = NULL) {
  $output = drupal_get_form('islandora_newspaper_calendar_page_form', $object, $issue_year);
  return drupal_render($output);
}

/**
 * The newspaper calendar page view.
 */
function islandora_newspaper_calendar_page_form($form, &$form_state, $object, $issue_year) {

  global $_REQUEST;
  global $base_url;
  drupal_add_js(drupal_get_path('module', 'islandora_newspaper_calendar_page') . '/js/islandora_newspaper_calendar_page.js');
  module_load_include('inc', 'islandora_newspaper', 'includes/utilities');
  drupal_set_title($object->label . " Issue Calendar");

  $_REQUEST['year_options'] = islandora_newspaper_calendar_page_get_years($object);
  $issues_solr = islandora_newspaper_get_solr_year_issues($object, $issue_year);
  $newspaper_issue_dates = array();
  if ($issues_solr['response']['numFound']) {
    foreach ($issues_solr['response']['docs'] as $key => $solr_data) {
      // Add 5 hours to solr dateIssued result since dates close to different
      // years (e.g. Jan 1) can be cast incorrectly.
      $solr_date = date("Y-m-d H:i:s", strtotime($solr_data['RELS_EXT_dateIssued_literal_ms'][0] . '+ 5 hours', $now = time()));
      $solr_year = date("Y", strtotime($solr_date, $now = time()));
      $solr_month = date("m", strtotime($solr_date, $now = time()));
      $solr_day = date("d", strtotime($solr_date, $now = time()));
      $newspaper_issue_dates[$solr_data['PID']] = $solr_year . "-" . $solr_month . "-" . $solr_day;
    }

    foreach ($newspaper_issue_dates as $pid => $issue_date) {
      $issue_year = date('Y', strtotime($issue_date));

      // Quick fix for query bringing back more than 1 year.
      if (!isset($first_year)) {
        $first_year = date('Y', strtotime($issue_date));
      }

      if ($issue_year == $first_year) {
        $issue_month = date('n', strtotime($issue_date));
        $issue_day = date('j', strtotime($issue_date));
        $issue_pids[$issue_year][$issue_month][$issue_day] = $pid;
      }
    }

    $form['new_cal']['year-select'] = array(
      '#type' => 'select',
      '#title' => t('Year'),
      '#options' => $_REQUEST['year_options'],
      '#default_value' => $issue_year,
      '#prefix' => '<div id = "date-change">',
      '#suffix' => '</div>',
    );

    $form['new_cal']['ajax-wrapper']['outter-block'] = array(
      '#markup' => '<div class = "year-cal-wrapper"><div class = "year-cal-row">',
      '#prefix' => '<div id = "ajax-wrapper">',
    );

    $year = $first_year;

    for ($ctr = 1; $ctr <= 12; $ctr++) {

      $month = $ctr;

      // Generate first day of the month.
      $first_day = mktime(0, 0, 0, $month, 1, $year);

      // Get month name.
      $title = date('F', $first_day);

      // Day of the week the first day of the month falls on.
      $day_of_week = date('D', $first_day);

      // Blank days occurring before first day.
      switch ($day_of_week) {
        case "Sun": $blank = 0;
          break;

        case "Mon": $blank = 1;
          break;

        case "Tue": $blank = 2;
          break;

        case "Wed": $blank = 3;
          break;

        case "Thu": $blank = 4;
          break;

        case "Fri": $blank = 5;
          break;

        case "Sat": $blank = 6;
          break;

        default:
          $blank = 0;
          break;
      }

      $days_in_month = cal_days_in_month(0, $month, $year);

      // Build calendar.
      $new_cal = '<div class = "cal-block-outter">
                    <div class = "cal-block">
                      <div class = "cal-row">
                        <div class = "cal-row-block">
                          <div class = "cal-title-block">'
                            . $title . " " . $year . '
                          </div>
                        </div>
                      </div>
                      <div class = "cal-row">
                        <div class = "cal-row-block">
                          <div class = "day-head-block">S</div>
                          <div class = "day-head-block">M</div>
                          <div class = "day-head-block">T</div>
                          <div class = "day-head-block">W</div>
                          <div class = "day-head-block">T</div>
                          <div class = "day-head-block">F</div>
                          <div class = "day-head-block">S</div>
                        </div>
                      </div>';

      $new_cal .= '<div class = "cal-row"><div class = "cal-row-block">';

      $day_count = 1;
      while ($blank > 0) {
        $new_cal .= '<div class = "blank-day-block">&nbsp;</div>';
        $blank = $blank-1;
        $day_count++;
      }

      $day_num = 1;
      while ($day_num <= $days_in_month) {
        if (array_key_exists($month, $issue_pids[$year])) {
          if (array_key_exists($day_num, $issue_pids[$year][$month])) {
            $new_cal .= '<div class = "day-issue-block"><a href=' . $base_url . '/islandora/object/'
              . $issue_pids[$year][$month][$day_num] . '>' . $day_num . '</a></div>';
          }
          else {
            $new_cal .= '<div class = "day-no-issue-block">' . $day_num . '</div>';
          }
        }
        else {
          $new_cal .= '<div class = "day-no-issue-block">' . $day_num . '</div>';
        }

        $day_count++;

        // Start new row every week.
        if ($day_count > 7 and $day_num != $days_in_month) {
          $new_cal .= '</div></div><div class = "cal-row"><div class = "cal-row-block">';
          $day_count = 1;
        }

        $day_num++;
      }

      // Add remaining blank days.
      while ($day_count > 1 && $day_count <= 7) {
        $new_cal .= '<div class = "blank-day-block">&nbsp;</div>';
        $day_count++;
      }

      if ($ctr == 4 or $ctr == 8) {
        $new_cal .= '</div></div></div></div></div><div class = "year-cal-row">';
      }
      elseif ($ctr == 12) {
        $new_cal .= '</div></div></div></div></div>';
      }
      else {
        $new_cal .= '</div></div></div></div>';
      }

      $form['new_cal']['ajax-wrapper']['calendar' . $ctr] = array('#markup' => $new_cal);
    }

    $form['new_cal']['ajax-wrapper']['end-outter-block'] = array('#markup' => '</div></div>');
  }
  else {
    $form['no_issues'] = array('#markup' => "Newspaper issues for this year are not yet available.");
  }

  return $form;
}

/**
 * Gets all available newspaper issue years and sets default  to earliest.
 *
 * @param AbstractObject $object
 *   The islandora newspaper object.
 *
 * @return string $year_options
 */
function islandora_newspaper_calendar_page_get_years(AbstractObject $object) {

  global $_REQUEST;
  module_load_include('inc', 'islandora_newspaper', 'includes/utilities');

  $all_issues = islandora_newspaper_get_issues($object);
  $all_grouped_issues = islandora_newspaper_group_issues($all_issues);
  $year_options = array();
  ksort($all_grouped_issues);
  foreach ($all_grouped_issues as $year => $month_data) {
    // Default to earliest newspaper issue year found.
    if (!isset($_REQUEST['year'])) {
      $_REQUEST['year'] = $year;
    }

    $year_options[$year] = $year;
  }

  return $year_options;
}

/**
 * Gets all issues from the given year that the given newspaper owns.
 *
 * The results are ordered by their RELS-EXT dateIssued property.
 * Older to newer.
 *
 * @param AbstractObject $object
 *   The datastream containing MODS.
 *
 * @param string $issue_year
 *   Year of issues to extract.
 *
 * @return array
 *   An associative array in the form of:
 *   - pid: The unique persistent identifier for the issue.
 *   - label: A descriptive label for the issue.
 *   - sequence: The sequence number of the issue, starts at 1.
 *   - issued: A DateTime object representing the date the issue was released.
 */
function islandora_newspaper_get_solr_year_issues(AbstractObject $object, $issue_year) {
  $solr_handler = variable_get('islandora_solr_request_handler', FALSE);
  $path_parts = parse_url(variable_get('islandora_solr_url', 'localhost:8080/solr'));
  $solr = new Apache_Solr_Service($path_parts['host'], $path_parts['port'], $path_parts['path'] . '/');
  $solr->setCreateDocuments(0);

  $cmodel_solr_field = variable_get('islandora_solr_content_model_field', 'content_model_ms');
  $parent_field = variable_get('islandora_solr_member_of_field', 'RELS_EXT_isMemberOf_uri_mt');
  $date_field = variable_get('islandora_newspaper_calendar_page_date_field', 'mods_originInfo_dateIssued_dt');
  $start_date = $issue_year . "-00-00T00:00:00Z";
  $end_date = $issue_year . "-12-31T23:59:59Z";
  $parent = $solr->escape($object->id);
  $cmodel = $solr->escape('islandora:newspaperIssueCModel');
  $solr_query = "({$cmodel_solr_field}:{$cmodel} OR {$cmodel_solr_field}:info\:fedora/{$cmodel})";
  $solr_query .= " AND ({$parent_field}:{$parent} OR {$parent_field}:info\:fedora/{$parent})";
  $solr_query .= " AND {$date_field}:[{$start_date} TO {$end_date}]";
  $solr_params = array();
  $solr_params['fl'][] = 'PID, RELS_EXT_dateIssued_literal_ms, mods_originInfo_dateIssued_dt';
  $solr_params['sort'] = array("{$date_field} asc");

  if ($solr_handler) {
    $solr_params['qt'] = $solr_handler;
  }
  $namespaces_enforced = variable_get('islandora_namespace_restriction_enforced', FALSE);
  if ($namespaces_enforced) {
    $namespace_list = trim(variable_get('islandora_pids_allowed', ''));
    if ($namespace_list) {
      $namespaces = preg_split('/[,|\s]/', $namespace_list);
      $namespaces[] = 'islandora:';
      $namespace_array = array();
      foreach (array_filter($namespaces) as $namespace) {
        $namespace_array[] = 'PID:' . Apache_Solr_Service::escape($namespace) . '*';
      }
      $solr_params['fq'][] = implode(' OR ', $namespace_array);
    }
  }

  try {
    $method = 'GET';
    $results = $solr->search($solr_query, 0, '100000', $solr_params, $method);
  }
  catch (Exception $e) {
    watchdog('islandora_solutionpack_newspapers', 'Error getting solr results %e',
      array('%e' => $e->getMessage()));
  }
  $solr_results = NULL;
  if (!empty($results)) {
    $solr_results = json_decode($results->getRawResponse(), TRUE);
  }
  return $solr_results;
}
